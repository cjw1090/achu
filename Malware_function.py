import time
import requests
import os
import pefile
import hashlib

tresult = []
ttresult = []


class malware_Check:
    def __init__(self, path, keys):
        self.path = path
        self.keys = keys

    def pefile_Search(self, path, keys):
        global files_count
        pe_list = []
        flag = 0

        for file in os.listdir(self.path):
            rootpath = os.path.join(os.path.abspath(self.path), file)
            try:
                pe = pefile.PE(rootpath)
                pe.close()
                flag = 1
            except:
                continue

            if (flag == 1):
                result = [file, rootpath]
                tresult.append(result)
                fa = open(os.path.join(self.path, file), "rb")
                data = fa.read()
                pe_list.append(hashlib.sha256(data).hexdigest())
                fa.close()
                flag = 0

        return pe_list

    def virustotal_Check(self, pe_list, path, keys):
        url = "https://www.virustotal.com/api/v3/files/"
        payload = {}
        files = {}
        key_count = 0
        for sha in pe_list:
            time.sleep(3)
            headers = {
                'x-apikey': keys[key_count]}
            key_count += 1
            key_count %= len(keys)
            urls = url + sha
            response = requests.request("GET", urls, headers=headers, data=payload, files=files)
            res = response.json()

            if 'error' in res:
                ttresult.append("Not Data in VirusTotal")
            else:
                count = 0
                flag = 0
                for j in res['data']['attributes']['last_analysis_results']:
                    if res['data']['attributes']['last_analysis_results'][j]['result'] != None:
                        count += 1
                    if count > 5:
                        ttresult.append("Malware")
                        flag = 1
                        break
                if flag == 0:
                    ttresult.append("No Malware")


def Malware_Main(path):
    global tresult,ttresult
    keys = ['fec069c0cf9cb2ef225c9cdbcbfe37a3cc5b7d338eb8738f3e84fbc763e00355']
    malCheck = malware_Check(path, keys)
    pe_list = malCheck.pefile_Search(path, keys)
    malCheck.virustotal_Check(pe_list, path, keys)
    return (tresult,ttresult)
